<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.ssm.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.zc.ssm.model.Student">
    <id column="sid" jdbcType="INTEGER" property="sid" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="sname_pinyin" jdbcType="VARCHAR" property="snamePinyin" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="file_id" jdbcType="BIGINT" property="fileId" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
  </resultMap>
  <sql id="Base_Column_List">
    sid, sname, sname_pinyin, age, remark, file_id, file_path
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_student
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  
   <select id="listStudentPager" resultType="com.zc.ssm.model.Student">
    select * from t_student  where 1=1
    <if test=" null !=sname and '' !=sname ">
    and sname like concat('%',#{sname},'%')
    </if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_student
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zc.ssm.model.Student">
    insert into t_student (sname, sname_pinyin, 
      age, remark, file_id, 
      file_path)
    values (#{sname,jdbcType=VARCHAR}, #{snamePinyin,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{fileId,jdbcType=BIGINT}, 
      #{filePath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zc.ssm.model.Student">
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sid,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="snamePinyin != null">
        sname_pinyin,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="snamePinyin != null">
        #{snamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=BIGINT},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zc.ssm.model.Student">
    update t_student
    <set>
      <if test="sname != null">
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="snamePinyin != null">
        sname_pinyin = #{snamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=BIGINT},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zc.ssm.model.Student">
    update t_student
    set sname = #{sname,jdbcType=VARCHAR},
      sname_pinyin = #{snamePinyin,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      file_id = #{fileId,jdbcType=BIGINT},
      file_path = #{filePath,jdbcType=VARCHAR}
    where sid = #{sid,jdbcType=INTEGER}
  </update>
</mapper>